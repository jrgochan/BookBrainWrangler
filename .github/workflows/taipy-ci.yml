name: Taipy CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'taipy_app.py'
      - 'run_taipy.py'
      - 'config/taipy/**'
      - 'pages/taipy/**'
      - 'tests/test_taipy_*.py'
      - 'tests/integration_*.py'
      - '.github/workflows/taipy-ci.yml'
      - 'Dockerfile.taipy'
      - 'docker-compose.taipy.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'taipy_app.py'
      - 'run_taipy.py'
      - 'config/taipy/**'
      - 'pages/taipy/**'
      - 'tests/test_taipy_*.py'
      - 'tests/integration_*.py'
      - '.github/workflows/taipy-ci.yml'
      - 'Dockerfile.taipy'
      - 'docker-compose.taipy.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run Taipy unit tests
      run: |
        pytest tests/test_taipy_*.py -v
    
    - name: Run Taipy integration tests
      run: |
        python tests/run_integration_tests.py
    
    - name: Generate test coverage report
      run: |
        pytest --cov=. --cov-report=xml tests/test_taipy_*.py tests/integration_*.py
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Build and push Taipy Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.taipy
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/bookknowledgeai-taipy:latest
    
  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    
    steps:
    - name: Deploy to staging environment
      run: |
        echo "Deploying Taipy version to staging environment"
        # Add deployment script or SSH commands to your staging server
    
  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production environment
      run: |
        echo "Deploying Taipy version to production environment"
        # Add deployment script or SSH commands to your production server